name: build OpenWrt WNDR4300V1
on: 
  #push:
  #schedule:
  #- cron: 0 0 * * 5
  watch:
    types: started
  
#env:
#  REPO_URL: https://github.com/coolsnowwolf/lede
#  REPO_BRANCH: master
#  CONFIG_FILE: .config
#  SSH_ACTIONS: false
#  UPLOAD_BIN_DIR: false
#  UPLOAD_FIRMWARE: true
#  UPLOAD_COWTRANSFER: false
#  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04  #ubuntu-latest #ubuntu-18.04 #20.04 
    #if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: 系统环境更新、清理空间 | Installation depends
      run: |
        #sudo swapoff /swapfile
        docker rmi `docker images -q`
        #sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        #sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo dpkg --configure -a
        sudo apt-get -u update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs  git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
        sudo timedatectl set-timezone "Asia/Shanghai"
        
    - name: 下载openwrt coolsnowwolf lean源代码 | Clone source code
      run: |   #下载原版内容openwrt
        git clone https://github.com/openwrt/openwrt
        git clone https://github.com/coolsnowwolf/lede
#        cp -r lede/package/lean/ openwrt/package/
#        rm -rf ./openwrt/package/lean/luci-app-qbittorrent/ ./openwrt/package/lean/qbittorrent/ ./openwrt/package/lean/luci-app-ssrserver-python/ ./openwrt/package/lean/autosamba/ ./openwrt/package/lean/luci-app-docker/ ./openwrt/package/lean/qt5/ ./openwrt/package/lean/qBittorrent
#         # Clone openclash项目
#         cd openwrt
#         mkdir package/luci-app-openclash
#         cd package/luci-app-openclash
#         git init
#         git remote add -f origin https://github.com/vernesong/OpenClash.git
#         git config core.sparsecheckout true
#         echo "luci-app-openclash" >> .git/info/sparse-checkout
#         git pull origin master
#         git branch --set-upstream-to=origin/master master
#         # 编译 po2lmo (如果有po2lmo可跳过)
#         pushd luci-app-openclash/tools/po2lmo
#         make && sudo make install
#         popd
    
#         #copy coolsnowwolf lean源代码下的lean包到原版目录。
        
#             #删除coolsnowwolf lean源代码
#         rm -rf lede/
        
        
    - name: 修改配置信息 ｜Generate config file
      run: |
        cd openwrt
        echo "src-git OpenClash https://github.com/vernesong/OpenClash.git" >> feeds.conf.default
        curl -fsSL https://github.com/chenxinxing/gfw/raw/master/openwrt/ar9344_netgear_wndr4300_128m.dts > ./target/linux/ath79/dts/ar9344_netgear_wndr4300_128m.dts
        curl -fsSL https://github.com/chenxinxing/gfw/raw/master/openwrt/ar9344_netgear_wndr_128m.dtsi > ./target/linux/ath79/dts/ar9344_netgear_wndr_128m.dtsi
        curl -fsSL https://github.com/chenxinxing/gfw/raw/master/openwrt/nand.mk > ./target/linux/ath79/image/nand.mk
        sed -i 's/root::0:0:99999:7:::/root:\$1\$wEehtjxj\$YBu4quNfVUjzfv8p\/PBo5\.:0:0:99999:7:::/' ./package/base-files/files/etc/shadow
        sed -i 's/\.disabled=1/\.disabled=0/' ./package/kernel/mac80211/files/lib/wifi/mac80211.sh
        sed -i 's/\.ssid=OpenWrt/\.ssid=stoneson/' ./package/kernel/mac80211/files/lib/wifi/mac80211.sh
        sed -i "s/set system\.\@system\[-1\]\.hostname='OpenWrt'/set system.@system[-1].hostname='WNDR4300'/" ./package/base-files/files/bin/config_generate
        sed -i "s/set system\.\@system\[-1\]\.timezone='UTC'/set system.@system[-1].timezone='CST-8'/" ./package/base-files/files/bin/config_generate

        sed -i "s/0\.openwrt\.pool\.ntp\.org/ntp1.aliyun.com/" ./package/base-files/files/bin/config_generate
        sed -i "s/1\.openwrt\.pool\.ntp\.org/time1.cloud.tencent.com/" ./package/base-files/files/bin/config_generate
        echo "net.netfilter.nf_conntrack_max=65535" >> ./package/base-files/files/etc/sysctl.d/10-default.conf
        echo "net.ipv4.ip_forward = 1" >> ./package/base-files/files/etc/sysctl.d/10-default.conf
        ./scripts/feeds clean && ./scripts/feeds update -a && ./scripts/feeds install -a
#        rm -rf ./tmp && rm -rf .config && rm -rf ./package/feeds/packages/seafile-server/
#        curl -fsSL https://github.com/chenxinxing/lede/raw/master/.github/config-4300 > .config
#        make defconfig && make prereq
        
    - name: SSH 连接，设置menuconfig
#       uses: mxschmitt/action-tmate@v1 #在退出连接后不能进行到下一个步骤，所以在实际使用中没有多少价值，只能用于 SSH 连接。
      uses: csexton/debugger-action@master #同样是通过 tmate 连接，退出连接后可持续进行下一个步骤，能更好的应用到实际项目中使用。
#       uses: P3TERX/debugger-action@master
    
    - name: Download package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
#     - name: 开始编译 | Build
#       run: |
#         cd openwrt
#         make -j$(($(nproc) + 1)) V=s 2>&1 | tee build.log 
    
#     - name: Upload build.log to WeTransfer
#       run: |
#         cd openwrt
#         tar cvfz wndr4300.tgz bin/*
#         curl -fsSL git.io/file-transfer | sh
#         ./transfer wet -s -p 16 --no-progress wndr4300.tgz 2>&1 | tee wetransfer.log
#         echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        
#     - name : 上传编译包｜Upload artifact
#       uses: actions/upload-artifact@master
#       with:
#         name: WNDR4300V1
#         path: openwrt/bin
